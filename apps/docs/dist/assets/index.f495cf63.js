import{o as g,c as e,d as r,C as t,M as u,D as x,Q as b,R as o,S as k,H as n,b as S,t as s,q as w}from"./index.7fce6435.js";import{C as f}from"./CodeSnippet.08181d9e.js";import{P as y,a as v}from"./PageTitle.ae31f383.js";import{P as c}from"./Preview.57b819a9.js";import{P as $}from"./PropsTable.7a791e85.js";import{S as p}from"./SectionSubtitle.86e40de8.js";import{S as i}from"./SectionTitle.028d68a7.js";import"./Footer.0b307416.js";const P='import { Stack, HStack, VStack } from "@hope-ui/solid"',B=`<HStack spacing="24px">
  <Box w="40px" h="40px" bg="$warning9">
    1
  </Box>
  <Box w="40px" h="40px" bg="tomato">
    2
  </Box>
  <Box w="40px" h="40px" bg="pink">
    3
  </Box>
</HStack>`,C=`<Stack direction={{ "@initial": "column", "@md": "row" }} spacing="24px">
  <Box w="40px" h="40px" bg="$warning9">
    1
  </Box>
  <Box w="40px" h="40px" bg="tomato">
    2
  </Box>
  <Box w="40px" h="40px" bg="pink">
    3
  </Box>
</Stack>`,a={importComponent:P,basicUsage:B,responsiveDirection:C};var H=s("<strong>Stack:"),U=s("<strong>HStack:"),D=s("<strong>VStack:");function V(){const l={href:"/docs/layout/simple-grid",label:"SimpleGrid"},d={href:"/docs/typography/heading",label:"Heading"},h=[{href:"#import",label:"Import"},{href:"#usage",label:"Usage"},{href:"#responsive-direction",label:"Responsive direction",indent:!0},{href:"#notes-on-stack-vs-flex",label:"Notes on Stack vs Flex",indent:!0},{href:"#props",label:"Props"}],m=[{name:"direction",description:"The direction to stack the items. Shorthand for flexDirection style prop.",type:"Property.FlexDirection"},{name:"wrap",description:"Shorthand for flexWrap style prop.",type:"Property.FlexWrap"},{name:"spacing",description:"The space between each stack item.",type:"Property.Gap"}];return g(()=>{w.highlightAll()}),e(v,{previousLink:l,nextLink:d,contextualNavLinks:h,get children(){return[e(y,{children:"Stack"}),e(r,{mb:"$5",get children(){return["Stack is a layout component that makes it easy to stack elements together and apply a space between them. It uses CSS ",e(t,{children:"gap"})," properties to add spacing between its children"]}}),e(u,{status:"warning",mb:"$12",get children(){return e(x,{get children(){return["You can check if your browser support CSS gap property in Flex layout on"," ",e(b,{href:"https://caniuse.com/?search=gap%20flex%20layout",external:!0,color:"$primary11",fontWeight:"$semibold",children:"caniuse.com"})]}})}}),e(i,{id:"import",children:"Import"}),e(f,{get snippet(){return a.importComponent},mb:"$6"}),e(o.ul,{ps:"$6",mb:"$12",get children(){return[e(o.li,{mb:"$2",get children(){return[H()," Used to add spacing between elements in the horizontal or vertical direction. It supports responsive values."]}}),e(o.li,{mb:"$2",get children(){return[U()," Used to add spacing between elements in horizontal direction, and centers them."]}}),e(o.li,{get children(){return[D()," Used to add spacing between elements in vertical direction only, and centers them."]}})]}}),e(i,{id:"usage",children:"Usage"}),e(r,{mb:"$5",get children(){return["To stack elements in horizontal or vertical direction only, use the ",e(t,{children:"HStack"})," or"," ",e(t,{children:"VStack"})," components. You can also use the ",e(t,{children:"Stack"})," component as well and pass the ",e(t,{children:"direction"})," prop."]}}),e(c,{get snippet(){return a.basicUsage},mb:"$10",get children(){return e(k,{spacing:"24px",get children(){return[e(n,{w:"40px",h:"40px",bg:"$warning9",children:"1"}),e(n,{w:"40px",h:"40px",bg:"tomato",children:"2"}),e(n,{w:"40px",h:"40px",bg:"pink",children:"3"})]}})}}),e(p,{id:"responsive-direction",children:"Responsive direction"}),e(r,{mb:"$5",get children(){return["You can pass responsive values to the ",e(t,{children:"Stack"})," component to change stack direction and/or spacing between elements."]}}),e(c,{get snippet(){return a.responsiveDirection},mb:"$10",get children(){return e(S,{direction:{"@initial":"column","@md":"row"},spacing:"24px",get children(){return[e(n,{w:"40px",h:"40px",bg:"$warning9",children:"1"}),e(n,{w:"40px",h:"40px",bg:"tomato",children:"2"}),e(n,{w:"40px",h:"40px",bg:"pink",children:"3"})]}})}}),e(p,{id:"notes-on-stack-vs-flex",children:"Notes on Stack vs Flex"}),e(r,{mb:"$12",get children(){return["Stack's primary use case is to lay items out and control the spacing between each item. If you have a more complicated use case, such as changing the margin on the last child, you can combine ",e(t,{children:"Stack"})," and ",e(t,{children:"Flex"})," and use"," ",e(t,{children:"justify-content: space-between"})," for more control of the layout."]}}),e(i,{id:"props",children:"Props"}),e($,{items:m})]}})}export{V as default};
