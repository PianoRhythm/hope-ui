import{o as u,c as e,d as r,C as n,Q as x,e as f,L as i,h as a,M as m,D as b,t as H,q as T}from"./index.e26fbb2f.js";import{C as d}from"./CodeSnippet.a0a5b4c5.js";import{P as k,a as w}from"./PageTitle.fa1a65f3.js";import{P as o}from"./Preview.c934444f.js";import{P as v}from"./PropsTable.beb954c1.js";import{S as l}from"./SectionSubtitle.c7dcad95.js";import{S as s}from"./SectionTitle.1f136890.js";import"./Footer.09caf936.js";const z='import { Heading } from "@hope-ui/solid"',q="<Heading>I'm a Heading</Heading>",y=`<VStack spacing="$3" alignItems="flex-start">
  <Heading level="1">The quick brown fox</Heading>
  <Heading level="2">The quick brown fox</Heading>
  <Heading level="3">The quick brown fox</Heading>
  <Heading level="4">The quick brown fox</Heading>
  <Heading level="5">The quick brown fox</Heading>
  <Heading level="6">The quick brown fox</Heading>
</VStack>`,$=`<VStack spacing="$3" alignItems="flex-start">
  <Heading size="9xl">(9xl) The quick brown fox</Heading>
  <Heading size="8xl">(8xl) The quick brown fox</Heading>
  <Heading size="7xl">(7xl) The quick brown fox</Heading>
  <Heading size="6xl">(6xl) The quick brown fox</Heading>
  <Heading size="5xl">(5xl) The quick brown fox</Heading>
  <Heading size="4xl">(4xl) The quick brown fox</Heading>
  <Heading size="3xl">(3xl) The quick brown fox</Heading>
  <Heading size="2xl">(2xl) The quick brown fox</Heading>
  <Heading size="xl">(xl) The quick brown fox</Heading>
  <Heading size="lg">(lg) The quick brown fox</Heading>
  <Heading size="base">(base) The quick brown fox</Heading>
  <Heading size="sm">(sm) The quick brown fox</Heading>
  <Heading size="xs">(xs) The quick brown fox</Heading>
</VStack>`,S=`<Heading noOfLines={1}>
  Lorem ipsum is placeholder Heading commonly used in the graphic, print, and publishing
  industries for previewing layouts and visual mockups.
</Heading>`,I=`<Heading fontSize="50px" color="tomato">
  I'm using a custom font-size value for this heading
</Heading>`,L=`const config: HopeThemeConfig = {
  components: {
    Heading: {
      baseStyle: SystemStyleObject,
      defaultProps: ThemeableHeadingOptions
    }
  }
}`,t={importComponent:z,basicUsage:q,level:y,sizes:$,truncateText:S,overrideStyle:I,theming:L};var P=H("<strong>Inspect Element");function D(){const h={href:"/docs/layout/stack",label:"Stack"},c={href:"/docs/typography/text",label:"Text"},g=[{href:"#import",label:"Import"},{href:"#usage",label:"Usage"},{href:"#level",label:"Level",indent:!0},{href:"#changing-font-size",label:"Changing the font size",indent:!0},{href:"#truncate-text",label:"Truncate text",indent:!0},{href:"#override-style",label:"Override style",indent:!0},{href:"#theming",label:"Theming"},{href:"#props",label:"Props"}],p=[{name:"level",description:"The level of the heading. For example, level 3 renders an `h3`.",type:"1 | 2 | 3 | 4 | 5 | 6"},{name:"size",description:"The size of the text. A combination of `font-size` and `line-height`.",type:'"xs" | "sm" | "base" | "lg" | "xl" | "2xl" | "3xl" | "4xl" | "5xl" | "6xl" | "7xl" | "8xl" | "9xl"'}];return u(()=>{T.highlightAll()}),e(w,{previousLink:h,nextLink:c,contextualNavLinks:g,get children(){return[e(k,{children:"Heading"}),e(r,{mb:"$5",get children(){return[e(n,{children:"Heading"})," composes"," ",e(x,{as:f,href:"/docs/layout/box",color:"$primary11",fontWeight:"$semibold",children:"Box"})," ","so you can use all the style props and add responsive styles as well. It renders a semibold"," ",e(n,{children:"h2"})," tag by default."]}}),e(s,{id:"import",children:"Import"}),e(d,{get snippet(){return t.importComponent},mb:"$12"}),e(s,{id:"usage",children:"Usage"}),e(o,{get snippet(){return t.basicUsage},mb:"$12",get children(){return e(i,{children:"I'm a Heading"})}}),e(l,{id:"level",children:"Level"}),e(r,{mb:"$5",get children(){return["To change the rendered ",e(n,{children:"h"})," tag pass the ",e(n,{children:"level"})," prop with a value from 1 to 6. For example, level 3 will render an ",e(n,{children:"h3"}),". Use"," ",P()," to see the element that gets rendered in html."]}}),e(o,{get snippet(){return t.level},mb:"$6",get children(){return e(a,{spacing:"$3",alignItems:"flex-start",get children(){return[e(i,{level:"1",children:"The quick brown fox"}),e(i,{level:"2",children:"The quick brown fox"}),e(i,{level:"3",children:"The quick brown fox"}),e(i,{level:"4",children:"The quick brown fox"}),e(i,{level:"5",children:"The quick brown fox"}),e(i,{level:"6",children:"The quick brown fox"})]}})}}),e(m,{status:"warning",mb:"$12",get children(){return e(b,{get children(){return["The ",e(n,{children:"level"})," prop is primarily for semantic purpose as it does not alter the heading styles"]}})}}),e(l,{id:"changing-font-size",children:"Changing the font size"}),e(r,{mb:"$5",get children(){return["To increase the font size of the text, you can pass the ",e(n,{children:"size"})," prop. It apply a combination of ",e(n,{children:"fontSize"})," and ",e(n,{children:"lineHeight"})," for an optimal reading experience."]}}),e(o,{get snippet(){return t.sizes},mb:"$12",get children(){return e(a,{spacing:"$3",alignItems:"flex-start",get children(){return[e(i,{size:"9xl",noOfLines:1,children:"(9xl) The quick brown fox"}),e(i,{size:"8xl",noOfLines:1,children:"(8xl) The quick brown fox"}),e(i,{size:"7xl",noOfLines:1,children:"(7xl) The quick brown fox"}),e(i,{size:"6xl",children:"(6xl) The quick brown fox"}),e(i,{size:"5xl",children:"(5xl) The quick brown fox"}),e(i,{size:"4xl",children:"(4xl) The quick brown fox"}),e(i,{size:"3xl",children:"(3xl) The quick brown fox"}),e(i,{size:"2xl",children:"(2xl) The quick brown fox"}),e(i,{size:"xl",children:"(xl) The quick brown fox"}),e(i,{size:"lg",children:"(lg) The quick brown fox"}),e(i,{size:"base",children:"(base) The quick brown fox"}),e(i,{size:"sm",children:"(sm) The quick brown fox"}),e(i,{size:"xs",children:"(xs) The quick brown fox"})]}})}}),e(l,{id:"truncate-text",children:"Truncate text"}),e(r,{mb:"$5",get children(){return["If you'd like to truncate the text after a specific number of lines, pass the"," ",e(n,{children:"noOfLines"})," prop and set it to the desired number of lines. It will render an ellipsis when the text exceeds the width of the viewport or ",e(n,{children:"maxWidth"})," prop."]}}),e(o,{get snippet(){return t.truncateText},mb:"$12",get children(){return e(i,{noOfLines:1,children:"Lorem ipsum is placeholder text commonly used in the graphic, print, and publishing industries for previewing layouts and visual mockups."})}}),e(l,{id:"override-style",children:"Override style"}),e(r,{mb:"$5",get children(){return["You can change the entire style of the text via props. For example, to change the font size, pass the ",e(n,{children:"fontSize"})," prop."]}}),e(o,{get snippet(){return t.overrideStyle},mb:"$12",get children(){return e(i,{fontSize:"50px",color:"tomato",children:"I'm using a custom font-size value for this heading"})}}),e(s,{id:"theming",children:"Theming"}),e(r,{mb:"$5",get children(){return[e(n,{children:"Heading"})," base styles and default props can be overridden in the Hope UI theme configuration like below:"]}}),e(d,{lang:"js",get snippet(){return t.theming},mb:"$12"}),e(s,{id:"props",children:"Props"}),e(v,{items:p})]}})}export{D as default};
