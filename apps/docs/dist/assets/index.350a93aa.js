import{o as g,c as e,d as r,U as v,N as s,C as i,aj as k,S as o,ak as a,t as p,q as y}from"./index.7fce6435.js";import{C as c}from"./CodeSnippet.08181d9e.js";import{P as S,a as C}from"./PageTitle.ae31f383.js";import{P as d}from"./Preview.57b819a9.js";import{P as h}from"./PropsTable.7a791e85.js";import{S as n}from"./SectionSubtitle.86e40de8.js";import{S as l}from"./SectionTitle.028d68a7.js";import"./Footer.0b307416.js";const $='import { Radio, RadioGroup } from "@hope-ui/solid"',w=`<RadioGroup defaultValue="1">
  <HStack spacing="$4">
    <Radio value="1">First</Radio>
    <Radio value="2">Second</Radio>
    <Radio value="3">Third</Radio>
  </HStack>
</RadioGroup>`,T=`<HStack spacing="$4">
  <Radio defaultChecked colorScheme="primary" />
  <Radio defaultChecked colorScheme="accent" />
  <Radio defaultChecked colorScheme="neutral" />
  <Radio defaultChecked colorScheme="success" />
  <Radio defaultChecked colorScheme="info" />
  <Radio defaultChecked colorScheme="warning" />
  <Radio defaultChecked colorScheme="danger" />
</HStack>`,P=`<HStack spacing="$4">
  <Radio defaultChecked size="sm">Radio</Radio>
  <Radio defaultChecked size="md">Radio</Radio>
  <Radio defaultChecked size="lg">Radio</Radio>
</HStack>`,I=`<HStack spacing="$4">
  <Radio variant="outline">Radio</Radio>
  <Radio variant="filled">Radio</Radio>
</HStack>`,H=`<HStack spacing="$4">
  <Radio LabelPlacement="start">Radio</Radio>
  <Radio LabelPlacement="end">Radio</Radio>
</HStack>`,z=`<HStack spacing="$4">
  <Radio disabled>Radio</Radio>
  <Radio variant="filled" disabled>Radio</Radio>
  <Radio defaultChecked disabled>Radio</Radio>
</HStack>`,U=`<HStack spacing="$4">
  <Radio invalid>Radio</Radio>
  <Radio variant="filled" invalid>Radio</Radio>
  <Radio defaultChecked invalid>Radio</Radio>
</HStack>`,G=`// Do this \u2705
<RadioGroup name="form-name">
  <Radio>Radio 1</Radio>
  <Radio>Radio 2</Radio>
</RadioGroup>

// Don't do this \u274C
<RadioGroup>
  <Radio name="form-name">Radio 2</Radio>
  <Radio name="form-name">Radio 2</Radio>
</RadioGroup>`,V=`const config: HopeThemeConfig = {
  components: {
    Radio: {
      baseStyle: {
        root: SystemStyleObject,
        group: SystemStyleObject,
        control: SystemStyleObject,
        label: SystemStyleObject,
      },
      defaultProps: {
        root: ThemeableRadioOptions,
        group: ThemeableRadioOptions,
      }
    }
  }
}`,t={importComponent:$,basicUsage:w,radioColors:T,radioSizes:P,radioVariants:I,radioLabelPlacement:H,radioDisabled:z,radioInvalid:U,nameProp:G,theming:V};var E=p("<strong>Radio:"),L=p("<strong>RadioGroup:");function x(){const u={href:"/docs/data-entry/form-control",label:"FormControl"},m={href:"/docs/data-entry/select",label:"Select"},b=[{href:"#import",label:"Import"},{href:"#usage",label:"Usage"},{href:"#colors",label:"Radio colors",indent:!0},{href:"#sizes",label:"Radio sizes",indent:!0},{href:"#variants",label:"Radio variants",indent:!0},{href:"#label-placement",label:"Radio label placement",indent:!0},{href:"#disabled",label:"Disabled state",indent:!0},{href:"#invalid",label:"Invalid state",indent:!0},{href:"#name-prop",label:"Note about `name` prop",indent:!0},{href:"#theming",label:"Theming"},{href:"#props",label:"Props"},{href:"#radio-props",label:"Radio props",indent:!0},{href:"#radio-group-props",label:"RadioGroup props",indent:!0}],f=[{name:"variant",description:"The visual style of the radio.",type:'"outline" | "filled"',defaultValue:'"outline"'},{name:"colorScheme",description:"The color of the radio.",type:'"primary" | "accent" | "neutral" | "success" | "info" | "warning" | "danger"',defaultValue:'"primary"'},{name:"size",description:"The size of the radio.",type:'"sm" | "md" | "lg"',defaultValue:'"md"'},{name:"labelPlacement",description:"The placement of the radio label.",type:'"start" | "end"',defaultValue:'"end"'},{name:"name",description:"The name of the input field in a radio (Useful for form submission).",type:"string"},{name:"value",description:"The value to be used in the radio input. This is the value that will be returned on form submission.",type:"string | number"},{name:"checked",description:"If `true`, the radio will be checked. You'll need to pass `onChange` to update its value (since it is now controlled).",type:"boolean"},{name:"defaultChecked",description:"If `true`, the radio will be initially checked.",type:"boolean"},{name:"required",description:"If `true`, the radio is marked as required, and `required` attribute will be added",type:"boolean"},{name:"disabled",description:"If `true`, the radio will be disabled.",type:"boolean"},{name:"invalid",description:"If `true`, the radio will have `aria-invalid` set to `true`.",type:"boolean"},{name:"readOnly",description:"If `true`, the radio will be readonly.",type:"boolean"},{name:"children",description:"The children of the radio. If used as a render props, the `checked` state will be passed.",type:"JSX.Element | (props: { checked: boolean }) => JSX.Element"},{name:"onChange",description:"The callback invoked when the checked state of the `Radio` changes.",type:"JSX.EventHandlerUnion<HTMLInputElement, Event>"},{name:"onFocus",description:"The callback invoked when the radio is focused.",type:"JSX.EventHandlerUnion<HTMLInputElement, FocusEvent>"},{name:"onBlur",description:"The callback invoked when the radio is blurred (loses focus).",type:"JSX.EventHandlerUnion<HTMLInputElement, FocusEvent>"}],R=[{name:"variant",description:"The visual style of the radios.",type:'"outline" | "filled"',defaultValue:'"outline"'},{name:"colorScheme",description:"The color of the radios.",type:'"primary" | "accent" | "neutral" | "success" | "info" | "warning" | "danger"',defaultValue:'"primary"'},{name:"size",description:"The size of the radios.",type:'"sm" | "md" | "lg"',defaultValue:'"md"'},{name:"labelPlacement",description:"The placement of the radios labels.",type:'"start" | "end"',defaultValue:'"end"'},{name:"name",description:"The `name` attribute forwarded to each `radio` element.",type:"string"},{name:"value",description:"The value of the radio to be `checked` (in controlled mode).",type:"string | number"},{name:"defaultValue",description:"The value of the radio to be `checked` initially (in uncontrolled mode).",type:"string | number"},{name:"required",description:"If `true`, all wrapped radio inputs will be marked as required, and `required` attribute will be added.",type:"boolean"},{name:"disabled",description:"If `true`, all wrapped radio inputs will be disabled.",type:"boolean"},{name:"invalid",description:"If `true`, all wrapped radio inputs will have `aria-invalid` set to `true`.",type:"boolean"},{name:"readOnly",description:"If `true`, all wrapped radio inputs will be readonly.",type:"boolean"},{name:"onChange",description:"The callback invoked when a radio is checked.",type:"(value: string | number) => void"}];return g(()=>{y.highlightAll()}),e(C,{previousLink:u,nextLink:m,contextualNavLinks:b,get children(){return[e(S,{children:"Radio"}),e(r,{mb:"$5",children:"Radios are used when only one choice may be selected in a series of options."}),e(l,{id:"import",children:"Import"}),e(c,{get snippet(){return t.importComponent},mb:"$6"}),e(v,{spacing:"$2",mb:"$12",get children(){return[e(s,{get children(){return[E()," Provides context for all its children. It renders a"," ",e(i,{children:"label"})," and a visualy hidden ",e(i,{children:"input"})," with type set to"," ",e(i,{children:"radio"}),"."]}}),e(s,{get children(){return[L()," Component to help manage the checked state of its children"," ",e(i,{children:"Radio"})," components and conveniently pass a few shared style props to each."]}})]}}),e(l,{id:"usage",children:"Usage"}),e(d,{get snippet(){return t.basicUsage},mb:"$12",get children(){return e(k,{defaultValue:"1",get children(){return e(o,{spacing:"$4",get children(){return[e(a,{value:"1",children:"First"}),e(a,{value:"2",children:"Second"}),e(a,{value:"3",children:"Third"})]}})}})}}),e(n,{id:"colors",children:"Radio colors"}),e(r,{mb:"$5",get children(){return["Use the ",e(i,{children:"colorScheme"})," prop to change the color of the Radio. You can set the value to ",e(i,{children:"primary"}),", ",e(i,{children:"accent"}),", ",e(i,{children:"neutral"}),","," ",e(i,{children:"success"}),", ",e(i,{children:"info"}),", ",e(i,{children:"warning"})," or ",e(i,{children:"danger"}),"."]}}),e(d,{get snippet(){return t.radioColors},mb:"$10",get children(){return e(o,{spacing:"$4",get children(){return[e(a,{defaultChecked:!0,colorScheme:"primary"}),e(a,{defaultChecked:!0,colorScheme:"accent"}),e(a,{defaultChecked:!0,colorScheme:"neutral"}),e(a,{defaultChecked:!0,colorScheme:"success"}),e(a,{defaultChecked:!0,colorScheme:"info"}),e(a,{defaultChecked:!0,colorScheme:"warning"}),e(a,{defaultChecked:!0,colorScheme:"danger"})]}})}}),e(n,{id:"sizes",children:"Radio sizes"}),e(r,{mb:"$5",get children(){return["Use the ",e(i,{children:"size"})," prop to change the size of the Radio. You can set the value to"," ",e(i,{children:"sm"}),", ",e(i,{children:"md"})," or ",e(i,{children:"lg"}),"."]}}),e(d,{get snippet(){return t.radioSizes},mb:"$10",get children(){return e(o,{spacing:"$4",get children(){return[e(a,{defaultChecked:!0,size:"sm",children:"Radio"}),e(a,{defaultChecked:!0,size:"md",children:"Radio"}),e(a,{defaultChecked:!0,size:"lg",children:"Radio"})]}})}}),e(n,{id:"variants",children:"Radio variants"}),e(r,{mb:"$5",get children(){return["Use the ",e(i,{children:"variant"})," prop to change the visual style of the Radio. You can set the value to ",e(i,{children:"outline"})," or ",e(i,{children:"filled"}),"."]}}),e(d,{get snippet(){return t.radioVariants},mb:"$10",get children(){return e(o,{spacing:"$4",get children(){return[e(a,{variant:"outline",children:"Radio"}),e(a,{variant:"filled",children:"Radio"})]}})}}),e(n,{id:"label-placement",children:"Radio label placement"}),e(r,{mb:"$5",get children(){return["Use the ",e(i,{children:"labelPlacement"})," prop to change the placement of the label. You can set the value to ",e(i,{children:"start"})," or ",e(i,{children:"end"}),"."]}}),e(d,{get snippet(){return t.radioLabelPlacement},mb:"$10",get children(){return e(o,{spacing:"$4",get children(){return[e(a,{labelPlacement:"start",children:"Radio"}),e(a,{labelPlacement:"end",children:"Radio"})]}})}}),e(n,{id:"disabled",children:"Disabled state"}),e(r,{mb:"$5",get children(){return["Use the ",e(i,{children:"disabled"})," prop to disable the Radio."]}}),e(d,{get snippet(){return t.radioDisabled},mb:"$10",get children(){return e(o,{spacing:"$4",get children(){return[e(a,{disabled:!0,children:"Radio"}),e(a,{variant:"filled",disabled:!0,children:"Radio"}),e(a,{defaultChecked:!0,disabled:!0,children:"Radio"})]}})}}),e(n,{id:"invalid",children:"Invalid state"}),e(r,{mb:"$5",get children(){return["Use the ",e(i,{children:"invalid"})," prop to mark the Radio as invalid."]}}),e(d,{get snippet(){return t.radioInvalid},mb:"$10",get children(){return e(o,{spacing:"$4",get children(){return[e(a,{invalid:!0,children:"Radio"}),e(a,{variant:"filled",invalid:!0,children:"Radio"}),e(a,{defaultChecked:!0,invalid:!0,children:"Radio"})]}})}}),e(n,{id:"name-prop",get children(){return["Note about ",e(i,{children:"name"})," prop"]}}),e(r,{mb:"$5",get children(){return["We recommend passing the ",e(i,{children:"name"})," prop to the ",e(i,{children:"RadioGroup"})," component, instead of passing it to each ",e(i,{children:"Radio"})," component. By default, the"," ",e(i,{children:"name"})," prop of the ",e(i,{children:"RadioGroup"})," takes precedence."]}}),e(c,{get snippet(){return t.nameProp},mb:"$12"}),e(l,{id:"theming",children:"Theming"}),e(r,{mb:"$5",get children(){return[e(i,{children:"Radio"})," base styles and default props can be overridden in the Hope UI theme configuration like below:"]}}),e(c,{lang:"js",get snippet(){return t.theming},mb:"$12"}),e(l,{id:"props",children:"Props"}),e(n,{id:"radio-props",children:"Radio props"}),e(h,{items:f,mb:"$10"}),e(n,{id:"radio-group-props",children:"RadioGroup props"}),e(h,{items:R})]}})}export{x as default};
