import{o as b,c as e,d as n,Q as w,e as $,C as r,R as p,G as a,i as t,t as m,q as y}from"./index.7fce6435.js";import{C as G}from"./CodeSnippet.08181d9e.js";import{P as S,a as C}from"./PageTitle.ae31f383.js";import{P as d}from"./Preview.57b819a9.js";import{P as s}from"./PropsTable.7a791e85.js";import{S as l}from"./SectionSubtitle.86e40de8.js";import{S as o}from"./SectionTitle.028d68a7.js";import"./Footer.0b307416.js";const I='import { Grid, GridItem } from "@hope-ui/solid"',P=`<Grid templateColumns="repeat(5, 1fr)" gap="$6">
  <GridItem w="100%" h="$10" bg="$info9" />
  <GridItem w="100%" h="$10" bg="$info9" />
  <GridItem w="100%" h="$10" bg="$info9" />
  <GridItem w="100%" h="$10" bg="$info9" />
  <GridItem w="100%" h="$10" bg="$info9" />
</Grid>`,T=`<Grid 
  h="200px" 
  templateRows="repeat(2, 1fr)" 
  templateColumns="repeat(5, 1fr)" 
  gap="$4"
>
  <GridItem rowSpan={2} colSpan={1} bg="tomato" />
  <GridItem colSpan={2} bg="papayawhip" />
  <GridItem colSpan={2} bg="papayawhip" />
  <GridItem colSpan={4} bg="tomato" />
</Grid>`,A=`<Grid templateColumns="repeat(5, 1fr)" gap="$4">
  <GridItem colSpan={2} h="$10" bg="tomato" />
  <GridItem colStart={4} colEnd={6} h="$10" bg="papayawhip" />
</Grid>`,i={importComponent:I,templateColumns:P,spanningColumns:T,startingAndEndingLines:A};var x=m("<strong>Grid:"),R=m("<strong>GridItem:");function _(){const h={href:"/docs/layout/flex",label:"Flex"},c={href:"/docs/layout/simple-grid",label:"SimpleGrid"},u=[{href:"#import",label:"Import"},{href:"#template-columns",label:"Template columns"},{href:"#spanning-columns",label:"Spanning columns"},{href:"#starting-and-ending-lines",label:"Starting and ending lines"},{href:"#props",label:"Props"},{href:"#grid-props",label:"Grid props",indent:!0},{href:"#grid-item-props",label:"GridItem props",indent:!0}],g=[{name:"autoColumns",description:"Short hand prop for gridAutoColumns.",type:"Property.GridAutoColumns"},{name:"autoRows",description:"Short hand prop for gridAutoRows.",type:"Property.GridAutoRows"},{name:"autoFlow",description:"Short hand prop for gridAutoFlow.",type:"Property.GridAutoFlow"},{name:"templateAreas",description:"Short hand prop for gridTemplateAreas.",type:"Property.GridTemplateAreas"},{name:"templateColumns",description:"Short hand prop for gridTemplateColumns.",type:"Property.GridTemplateColumns"},{name:"templateRows",description:"Short hand prop for gridTemplateRows.",type:"Property.GridTemplateRows"}],f=[{name:"area",description:"Short hand prop for gridArea.",type:"Property.GridArea"},{name:"colStart",description:"The column number the grid item should start.",type:"Property.GridColumnStart"},{name:"colEnd",description:"The column number the grid item should end.",type:"Property.GridColumnEnd"},{name:"colSpan",description:"The number of columns the grid item should span.",type:'string | number | "auto" | "full"'},{name:"rowStart",description:"The row number the grid item should start.",type:"Property.GridRowStart"},{name:"rowEnd",description:"The row number the grid item should end.",type:"Property.GridRowEnd"},{name:"rowSpan",description:"The number of rows the grid item should span.",type:'string | number | "auto" | "full"'}];return b(()=>{y.highlightAll()}),e(C,{previousLink:h,nextLink:c,contextualNavLinks:u,get children(){return[e(S,{children:"Grid"}),e(n,{mb:"$5",get children(){return["A primitive useful for grid layouts. Grid is"," ",e(w,{as:$,href:"/docs/layout/box",color:"$primary11",fontWeight:"$semibold",children:"Box"})," ","with ",e(r,{children:"display: grid"})," and it comes with helpful style shorthand. It renders a"," ",e(r,{children:"div"})," element."]}}),e(o,{id:"import",children:"Import"}),e(G,{get snippet(){return i.importComponent},mb:"$6"}),e(p.ul,{ps:"$6",mb:"$12",get children(){return[e(p.li,{mb:"$2",get children(){return[x()," The main wrapper with ",e(r,{children:"display: grid"}),"."]}}),e(p.li,{get children(){return[R()," Used as a child of ",e(r,{children:"Grid"})," to control the span, and start positions within the grid."]}})]}}),e(o,{id:"template-columns",children:"Template columns"}),e(n,{mb:"$5",get children(){return["Here's an example of using grid template columns with the ",e(r,{children:"Grid"})," component, and applying a ",e(r,{children:"gap"})," (space) between the grid items."]}}),e(d,{get snippet(){return i.templateColumns},mb:"$12",get children(){return e(a,{templateColumns:"repeat(5, 1fr)",gap:"$6",get children(){return[e(t,{w:"100%",h:"$10",bg:"$info9"}),e(t,{w:"100%",h:"$10",bg:"$info9"}),e(t,{w:"100%",h:"$10",bg:"$info9"}),e(t,{w:"100%",h:"$10",bg:"$info9"}),e(t,{w:"100%",h:"$10",bg:"$info9"})]}})}}),e(o,{id:"spanning-columns",children:"Spanning columns"}),e(n,{mb:"$5",children:"In some layouts, you may need certain grid items to span specific amount of columns or rows instead of an even distribution."}),e(n,{mb:"$5",get children(){return["To achieve this, you need to pass the ",e(r,{children:"colSpan"})," prop to the ",e(r,{children:"GridItem"})," ","component to span across columns and also pass the ",e(r,{children:"rowSpan"})," component to span across rows. You also need to specify the ",e(r,{children:"templateColumns"})," and",e(r,{children:"templateRows"}),"."]}}),e(d,{get snippet(){return i.spanningColumns},mb:"$12",get children(){return e(a,{h:"200px",templateRows:"repeat(2, 1fr)",templateColumns:"repeat(5, 1fr)",gap:"$4",get children(){return[e(t,{rowSpan:2,colSpan:1,bg:"tomato"}),e(t,{colSpan:2,bg:"papayawhip"}),e(t,{colSpan:2,bg:"papayawhip"}),e(t,{colSpan:4,bg:"tomato"})]}})}}),e(o,{id:"starting-and-ending-lines",children:"Starting and ending lines"}),e(n,{mb:"$5",get children(){return["Pass the ",e(r,{children:"colStart"})," and ",e(r,{children:"colEnd"})," prop to ",e(r,{children:"GridItem"})," ","component to make an element start or end at the ",e(r,{children:"nth"})," grid position."]}}),e(d,{get snippet(){return i.startingAndEndingLines},mb:"$12",get children(){return e(a,{templateColumns:"repeat(5, 1fr)",gap:"$4",get children(){return[e(t,{colSpan:2,h:"$10",bg:"tomato"}),e(t,{colStart:4,colEnd:6,h:"$10",bg:"papayawhip"})]}})}}),e(o,{id:"props",children:"Props"}),e(l,{id:"grid-props",children:"Grid props"}),e(n,{mb:"$5",get children(){return["Grid composes ",e(r,{children:"Box"})," so you can pass all the ",e(r,{children:"Box"})," prop, css grid props, and these shorthand prop to save you some time:"]}}),e(s,{items:g,mb:"$10"}),e(l,{id:"grid-item-props",children:"GridItem props"}),e(s,{items:f})]}})}export{_ as default};
